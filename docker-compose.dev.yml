version: "3.8"

services:
  # PostgreSQL Database for Development
  postgres-dev:
    image: postgres:15-alpine
    container_name: agrisupply_postgres_dev
    environment:
      POSTGRES_DB: agrisupply_insights_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5433:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./server/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - agrisupply_dev_network
    restart: unless-stopped

  # Redis for Development
  redis-dev:
    image: redis:7-alpine
    container_name: agrisupply_redis_dev
    ports:
      - "6380:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - agrisupply_dev_network
    restart: unless-stopped

  # Development Backend with Hot Reload
  backend-dev:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: agrisupply_backend_dev
    environment:
      NODE_ENV: development
      PORT: 5000
      DB_HOST: postgres-dev
      DB_PORT: 5432
      DB_NAME: agrisupply_insights_dev
      DB_USER: postgres
      DB_PASSWORD: postgres123
      JWT_SECRET: dev_jwt_secret_change_in_production
      JWT_REFRESH_SECRET: dev_refresh_secret_change_in_production
      CLIENT_URL: http://localhost:5173
    ports:
      - "5001:5000"
    volumes:
      - ./server:/app
      - /app/node_modules
      - backend_dev_uploads:/app/uploads
    depends_on:
      - postgres-dev
      - redis-dev
    networks:
      - agrisupply_dev_network
    restart: unless-stopped
    command: npm run dev

networks:
  agrisupply_dev_network:
    driver: bridge

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  backend_dev_uploads:
    driver: local
